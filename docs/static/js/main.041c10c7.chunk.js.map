{"version":3,"sources":["components/Cadena.js","helpers/aleatorio.js","types/types.js","hooks/useCounter.js","components/Counter.js","actions/counter.js","hooks/useForm.js","components/FormAddCadena.js","actions/vocabulario.js","components/NavBar.js","components/Panel.js","components/PanelBlank.js","components/Vocabularios.js","components/SideBar.js","App.js","reducers/vocabularioReducer.js","store/store.js","reducers/countReducer.js","index.js"],"names":["Cadena","count","useSelector","state","active","vocabulario","useState","setState","useEffect","className","onClick","arrayCadenas","length","index","cantidad","push","cadena","hidden","style","maxHeight","map","value","min","max","len","Math","floor","random","sort","slice","types","UseCounter","initialState","counter","setCounter","reset","initial","increment","decrement","Counter","dispatch","useDispatch","type","payload","disabled","useForm","values","setValues","e","target","name","newwState","FormAddCadena","handleInputChange","onSubmit","preventDefault","onChange","autoComplete","NavBar","Panel","PanelBlank","role","src","alt","Vocabularios","height","size","startActiveVocabulario","JSON","stringify","startVocabularioDelete","SideBar","vocabularios","App","vocabularioReducer","action","filter","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.041c10c7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { aleatorio } from '../helpers/aleatorio';\r\n\r\nconst Cadena = () => {\r\n    const count = useSelector(state => state.count);\r\n    const active = useSelector(state => state.vocabulario.active.vocabulario);\r\n    \r\n    const [state, setState] = useState([]);\r\n\r\n    \r\n    const handleClick = () => {\r\n        let arrayCadenas = [];\r\n        if (active.length !== 0) {\r\n            for (let index = 0; index < count.cantidad; index++) {\r\n                arrayCadenas.push(cadena(active))\r\n            }\r\n\r\n            setState(arrayCadenas);\r\n                     \r\n        } else {\r\n            setState([]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([]);\r\n    }, [active])\r\n\r\n    return (\r\n        <div >\r\n            <div className='text-center mb-3'>\r\n                <button className='btn btn-primary btn-lg' onClick={handleClick}\r\n                    hidden={\r\n                        (active.length===0)?true:false\r\n                    }\r\n                >\r\n                    Generar cadenas\r\n                </button>\r\n                \r\n            </div>\r\n\r\n         \r\n            \r\n           <div className='m-1'>\r\n                <div className='text-white  overflow-auto d-grid' style={{maxHeight:'400px'}}>\r\n                    \r\n                    {\r\n                        \r\n                        state.map((value,index) => (\r\n                            <div className=\" d-flex justify-content-between align-items-center shadow-lg rounded p-2 m-2 animate__animated animate__zoomInLeft\" key={index}>\r\n                                { index+1} = {value}\r\n                                <span className=\"badge bg-primary rounded-pill\">{value.length}</span>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cadena\r\n\r\n\r\nconst cadena = (vocabulario) => {\r\n\r\n    const len=aleatorio(1,vocabulario.length+1)\r\n   // desordenados\r\n    const shuffled = vocabulario.sort(() => 0.5 - Math.random());\r\n\r\n    // n primeros del array\r\n    let selected = shuffled.slice(0, len);\r\n     \r\n    return selected;\r\n}","// Retorna un entero aleatorio entre min (incluido) y max (excluido)\r\n\r\nexport function aleatorio(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}","export const types = {\r\n    vocabularioAdd:'[vocabulario] add',\r\n    vocabularioActive:'[vocabulario] active',\r\n    vocabularioAddCadena: '[vocabulario] add cadena',\r\n    vocabularioDelete: '[vocabulario] delete',\r\n    \r\n\r\n    counterAdd:'[counter] add',\r\n}","import {useState} from 'react'\r\n\r\nconst UseCounter = (initialState=0) => {\r\n\r\n    const [counter, setCounter] = useState(initialState);\r\n\r\n    const reset = (initial=initialState) => {\r\n        setCounter(initial);\r\n    }\r\n\r\n    const increment = (max=20) => {\r\n        if (counter < max) {\r\n            setCounter(counter + 1);            \r\n        }\r\n    }\r\n\r\n    const decrement = (min=0) => {\r\n        if (counter >min) {\r\n            setCounter(counter - 1);            \r\n        }\r\n    }\r\n\r\n    return{counter,increment,decrement,reset}\r\n}\r\n\r\nexport default UseCounter","import React, { useEffect,  } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startAddCount } from '../actions/counter';\r\nimport UseCounter from '../hooks/useCounter'\r\n\r\nconst Counter = () => {\r\n\r\n\r\n    const { counter, increment, decrement, reset } = UseCounter(10);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        dispatch(startAddCount(counter));\r\n    }, [counter,dispatch])\r\n    \r\n    return (\r\n       <div className='my-2 text-center my-1'>\r\n            <h3>cantidad de cadenas</h3>\r\n            <button\r\n                onClick={()=>decrement(0)}\r\n                className='btn btn-primary'\r\n                disabled={\r\n                    (counter===1)? true:false\r\n                }\r\n            >\r\n                menos\r\n            </button>\r\n\r\n            <button onClick={()=>reset()} className='btn btn-primary mx-1'>reset</button>\r\n            \r\n            <button\r\n                onClick={()=>increment(20)}\r\n                className='btn btn-primary'\r\n                disabled={\r\n                    (counter===20)?true:false\r\n                }\r\n            >\r\n                más\r\n            </button>\r\n            <br  />\r\n            <strong className='fs-1 '>{counter}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import { types } from \"../types/types\"\r\n\r\nexport const startAddCount = (cantidad) => ({\r\n    type: types.counterAdd,\r\n    payload:{cantidad}        \r\n})","import {useState} from 'react'\r\n\r\nconst useForm = (initialState) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newwState = initialState) => {\r\n        setValues(newwState);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    \r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n\r\nexport default useForm","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startVocabularioAddCadena } from '../actions/vocabulario'\r\nimport useForm from '../hooks/useForm'\r\n\r\nconst FormAddCadena = () => {\r\n    const [values, handleInputChange,reset] = useForm({ cadena: '' })\r\n    const dispatch = useDispatch();\r\n\r\n    const vocabulario = useSelector(state => state.vocabulario)\r\n\r\n   \r\n  \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startVocabularioAddCadena(vocabulario.active.index, values.cadena));\r\n        reset();\r\n\r\n    }\r\n    \r\n    return (\r\n         <form className=\" g-3  text-center p-5 \" onSubmit={handleSubmit}>\r\n    \r\n                <h4>Ingresar símbolos</h4>\r\n                <div className=\"row\">\r\n                    <label className=\" col-sm-12 col-lg-3 col-form-label text-white\">Símbolo</label>\r\n                    <div className=\" col-sm-12 col-lg-6\">\r\n                    <input type=\"text\" className=\"form-control bg-transparent text-white\" name='cadena' onChange={handleInputChange} value={values.cadena} autoComplete='off'/>\r\n                    </div>\r\n                    <div className=' col-sm-12 col-lg-3'>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-primary my-1'\r\n                        >\r\n                            agregar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormAddCadena\r\n","import { types } from \"../types/types\";\r\n\r\nexport const startAddVocabulario = () => (\r\n    {\r\n        type: types.vocabularioAdd,\r\n        payload: []\r\n    }\r\n);\r\n\r\n\r\nexport const startActiveVocabulario = (index, vocabulario) => (\r\n    {\r\n        type: types.vocabularioActive,\r\n        payload: {\r\n            index,\r\n            vocabulario,\r\n            size:vocabulario.length\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const startVocabularioAddCadena = (index, cadena) => (\r\n    {\r\n        type: types.vocabularioAddCadena,\r\n        payload: {\r\n            index,cadena\r\n        }\r\n    }\r\n)\r\n\r\nexport const startVocabularioDelete = (index) => (\r\n    {\r\n        type: types.vocabularioDelete,\r\n        payload:{index}\r\n    }\r\n)","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst NavBar = () => {\r\n\r\n    const index = useSelector(state => state.vocabulario.active.index);\r\n    return (\r\n        <ul className=\"nav justify-content-between  shadow  mb-4 ms-3 p-3\">\r\n            <div></div>\r\n            <h3 className='text-white'>vocabulario { index+1}</h3>\r\n           <div className='d-flex'>\r\n                {/* <li className=\"nav-item\">\r\n                    <button className=\"btn btn-primary mx-1\">Active</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button className=\"btn btn-success mx-1\">Active</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button className=\"btn btn-danger mx-1\">Active</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button className=\"btn btn-warning mx-1\">Active</button>\r\n                </li> */}\r\n           </div>\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport Cadena from './Cadena'\r\nimport Counter from './Counter'\r\nimport FormAddCadena from './FormAddCadena'\r\nimport NavBar from './NavBar'\r\n\r\nconst Panel = () => {\r\n\r\n    \r\n    return (\r\n        <div className=\"d-flex flex-column flex-shrink-0  col-md-8 col-12 p-0 m-0\"  >\r\n            <NavBar />\r\n\r\n\r\n           <div className='ms-3 p-2'>\r\n               <div className='shadow animate__animated animate__animated animate__zoomIn'>\r\n                    \r\n                   <div className='d-flex flex-column justify-content-center align-item-center'>\r\n                        \r\n                        <FormAddCadena/>\r\n                      \r\n                   </div>\r\n               </div>\r\n              \r\n                <div className='shadow p-1 animate__animated animate__zoomIn pt-3'>\r\n                    <Counter />\r\n                    <Cadena/>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel\r\n","import React from 'react'\r\n\r\nconst PanelBlank = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column flex-shrink-0 justify-content-center align-items-center col-md-8 col-12 fill-content m-0 p-0\"  >\r\n          \r\n                <div className=\"alert alert-primary text-center\" role=\"alert\">\r\n                    <h3>No has seleccionado ningún vocabulario!!</h3>\r\n                    si aún no tienes ningún vocabulario presiona en <strong> agregar nuevo vocabulario </strong>\r\n                </div>\r\n      \r\n          <img src='https://estudiaperu.pe/wp-content/uploads/2019/12/UNASAM.png' alt=\"no se pudo cargar\" style={{maxHeight:'300px'}} className='img-fluid' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PanelBlank\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startActiveVocabulario, startVocabularioDelete } from '../actions/vocabulario';\r\n\r\nconst Vocabularios = ({ index,vocabulario }) => {\r\n    \r\n    const active = useSelector(state => state.vocabulario.active)\r\n    const dispatch = useDispatch();\r\n    const handleClick = () => {\r\n        dispatch(startActiveVocabulario(index,vocabulario))\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startVocabularioDelete(index))\r\n    }\r\n    return (\r\n        <div className='ms-2'>\r\n            <div className={`alert shadow-lg alert-dismissible fade show hover m-3 p-0 ${(index===active.index)?('active'):''} animate__animated animate__backInLeft`} role=\"alert\"  >\r\n                <div className='m-2 pointer' style={{height:'100%'}} onClick={handleClick}>\r\n                    <h6>vocabulario : {index+1}</h6>\r\n                   \r\n                    <p><strong>V{ index+1 }={JSON.stringify(vocabulario,null,'  ')}</strong></p>\r\n                </div>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\" onClick={handleDelete}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Vocabularios\r\n","import React from 'react'\r\nimport Vocabularios from './Vocabularios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startAddVocabulario } from '../actions/vocabulario';\r\n\r\nconst SideBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const vocabularios = useSelector(state => state.vocabulario.vocabularios);\r\n   \r\n    const handleClick = () => {\r\n        dispatch(startAddVocabulario());\r\n    }\r\n    return (\r\n        <div className=\"sidebar d-flex flex-column flex-shrink-0 p-3 text-white  col-md-4 col-12 fill-content\" style={{  height: '100vh' }}>\r\n            <div className='text-center'>\r\n                <img src='https://estudiaperu.pe/wp-content/uploads/2019/12/UNASAM.png' alt=\"no se pudo cargar\" style={{maxHeight:'150px'}} className='img-fluid' />\r\n            </div>\r\n            <hr />\r\n            \r\n                <button\r\n                    className='btn btn-primary btn-lg'\r\n                    onClick={handleClick}\r\n                    disabled={(vocabularios.length===6)?true:false}\r\n                >\r\n               \r\n                \r\n                {\r\n                (vocabularios.length === 6)\r\n                         ?(\r\n                             <strong className='text-center text-warning'>La cantidad máxima de vocabularios es 6</strong>\r\n                        )\r\n                        : (\r\n                             <strong>Agregar nuevo vocabulario</strong>\r\n                        )\r\n                \r\n               }\r\n                </button>\r\n            \r\n         \r\n            <br />\r\n\r\n            <div className='overflow-auto'>\r\n                {\r\n                    vocabularios.map((value,index) => (\r\n                        <Vocabularios key={index} index={index} vocabulario={value}/>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n            \r\n          \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","\nimport {  useSelector } from 'react-redux';\nimport './App.css';\nimport Panel from './components/Panel';\nimport PanelBlank from './components/PanelBlank';\nimport SideBar from './components/SideBar';\n\n\nfunction App() {\n  const active = useSelector(state => state.vocabulario.active);\n  \n  return (\n    <div className='row contenedor'>\n     <SideBar />\n      {\n        (active.length!==0)\n        ?(  <Panel />)\n        :(<PanelBlank/>)   \n      }\n     \n    </div>\n  );\n}\n\nexport default App;\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    vocabularios: [],\r\n    active:[]\r\n}\r\n\r\nconst vocabularioReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.vocabularioAdd:\r\n            return {\r\n                ...state,\r\n                vocabularios: [...state.vocabularios, action.payload]\r\n            };\r\n        case types.vocabularioActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.vocabularioAddCadena:\r\n            return {\r\n                ...state,\r\n                vocabularios: state.vocabularios.map((value, index) => (index === action.payload.index ? [...value, action.payload.cadena] : value)),\r\n                active: {\r\n                    ...state.active,\r\n                    vocabulario: [...state.active.vocabulario, action.payload.cadena],\r\n                    size:state.active.vocabulario.length+1\r\n                }\r\n                \r\n            }\r\n            \r\n        case types.vocabularioDelete:\r\n            return {\r\n                ...state,\r\n                vocabularios: state.vocabularios.filter((value, index) => (index !== action.payload.index) ),\r\n                active:[]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default vocabularioReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport vocabularioReducer from \"../reducers/vocabularioReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { countReducer } from \"../reducers/countReducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    vocabulario: vocabularioReducer,\r\n    count:countReducer\r\n    \r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n   composeEnhancers(applyMiddleware(thunk))\r\n)","import { types } from \"../types/types\";\r\n\r\n\r\nexport const countReducer = (state = { cantidad: 0 }, action) => {\r\n    switch (action.type) {\r\n        case types.counterAdd:\r\n            return {\r\n                ...state,\r\n                cantidad:action.payload.cantidad\r\n\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}