{"version":3,"sources":["helpers/functions.js","components/Cadena.js","types/types.js","hooks/useCounter.js","components/Counter.js","actions/counter.js","hooks/useForm.js","components/FormAddCadena.js","actions/vocabulario.js","components/NavBar.js","components/Panel.js","components/PanelBlank.js","components/Vocabularios.js","components/SideBar.js","App.js","reducers/vocabularioReducer.js","store/store.js","reducers/countReducer.js","index.js"],"names":["gererarCadenas","vocabulario","cantidad","arrayCadenas","index","len","aleatorio","cadena","i","indexAleatory","length","push","min","max","Math","floor","random","arrayToString","array","arrayRemoveRepeated","arrayJoin","filter","item","indexOf","map","join","Cadena","count","useSelector","state","active","useState","setState","setUniverso","setLenguaje","useEffect","concat","className","onClick","hidden","style","maxHeight","value","types","UseCounter","initialState","counter","setCounter","reset","initial","increment","decrement","Counter","dispatch","useDispatch","type","payload","disabled","useForm","values","setValues","newwState","handleInputChange","e","target","name","FormAddCadena","onSubmit","preventDefault","vocabularios","includes","document","getElementById","select","id","onChange","autoComplete","NavBar","Panel","PanelBlank","role","src","alt","opacity","Vocabularios","height","size","startActiveVocabulario","startVocabularioDelete","SideBar","App","vocabularioReducer","action","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.90d1d0be.chunk.js","sourcesContent":["export const gererarCadenas = (vocabulario, cantidad) => {\r\n  //  vocabulario=['jose',44,52,69,32,356,3]\r\n\r\n  let arrayCadenas = [];\r\n\r\n  for (let index = 0; index < cantidad; index++) {\r\n    // n primeros del array\r\n    const len = aleatorio(1, 20);\r\n    const cadena = [];\r\n    for (let i = 0; i < len; i++) {\r\n      const indexAleatory = aleatorio(0, vocabulario.length);\r\n      cadena.push(vocabulario[indexAleatory]);\r\n    }\r\n\r\n    arrayCadenas.push(cadena);\r\n  }\r\n\r\n  return arrayCadenas;\r\n};\r\n\r\nexport const generarLenguaje = (array, cantidad) => {\r\n  let result = [];\r\n  for (let index = 0; index < cantidad; index++) {\r\n    const indexAleatory = aleatorio(0, array.length);\r\n    result.push(array[indexAleatory]);\r\n  }\r\n  return result;\r\n};\r\n// Retorna un entero aleatorio entre min (incluido) y max (excluido)\r\nconst aleatorio = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\nexport const arrayToString = (array) => {\r\n  let cadena = \"{\";\r\n\r\n  for (let index = 0; index < array.length; index++) {\r\n    cadena += array[index];\r\n    if (index !== array.length - 1) {\r\n      cadena += \" , \";\r\n    }\r\n  }\r\n\r\n  cadena += \"}\";\r\n  return cadena;\r\n};\r\n\r\nexport const arrayRemoveRepeated = (array) => {\r\n  let arrayCadenas = arrayJoin(array);\r\n\r\n  let result = arrayCadenas.filter((item, index) => {\r\n    return arrayCadenas.indexOf(item) === index;\r\n  });\r\n  return result;\r\n};\r\n\r\nconst arrayJoin = (array) => {\r\n  return array.map((item) => {\r\n    return item.join(\"\");\r\n  });\r\n};\r\n\r\n// const arrayEcuals = (array1, array2) => {\r\n//   return JSON.stringify(array1) === JSON.stringify(array2);\r\n// };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  arrayRemoveRepeated,\r\n  arrayToString,\r\n  gererarCadenas,\r\n} from \"../helpers/functions\";\r\n\r\nconst Cadena = () => {\r\n  const count = useSelector((state) => state.count);\r\n  const active = useSelector((state) => state.vocabulario.active.vocabulario);\r\n\r\n  const [state, setState] = useState([]);\r\n  const [universo, setUniverso] = useState(\"\");\r\n  const [lenguaje, setLenguaje] = useState([]);\r\n\r\n  const handleClick = () => {\r\n    if (active.length !== 0) {\r\n      setState(gererarCadenas(active, count.cantidad));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState([]);\r\n  }, [active]);\r\n\r\n  useEffect(() => {\r\n    if (state.length !== 0) {\r\n      setUniverso(arrayToString(arrayRemoveRepeated(state.concat([[\"...\"]]))));\r\n      setLenguaje(gererarCadenas(arrayRemoveRepeated(state), 10));\r\n    }\r\n  }, [state]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-center mb-3\">\r\n        <button\r\n          className=\"btn btn-primary btn-lg\"\r\n          onClick={handleClick}\r\n          hidden={active.length === 0 ? true : false}\r\n        >\r\n          Generar cadenas\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"m-1\">\r\n        {state.length !== 0 ? (\r\n          <div>\r\n            <div\r\n              className=\"text-white  overflow-auto d-grid\"\r\n              style={{ maxHeight: \"400px\" }}\r\n            >\r\n              {state.map((value, index) => (\r\n                <div\r\n                  className=\" d-flex justify-content-between align-items-center shadow-lg rounded p-2 m-2 animate__animated animate__zoomInLeft\"\r\n                  key={index}\r\n                >\r\n                  {index + 1} = {value}\r\n                  <span className=\"badge bg-primary rounded-pill\">\r\n                    {value.length}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* <div className=\"text-white d-flex flex-column\">\r\n              <strong className=\"text-dark\">universo del discurso</strong>\r\n              <div>W(V)= {universo}</div>\r\n            </div>\r\n            <div className=\"text-white\">\r\n              <strong className=\"text-dark\">lenjuaje</strong>\r\n\r\n              <div\r\n                className=\"text-white  overflow-auto d-grid\"\r\n                style={{ maxHeight: \"400px\" }}\r\n              >\r\n                {lenguaje.map((value, index) => (\r\n                  <div\r\n                    className=\" d-flex justify-content-between align-items-center shadow-lg rounded p-2 m-2 animate__animated animate__zoomInLeft\"\r\n                    key={index}\r\n                  >\r\n                    W({index + 1}) = {arrayToString(value)}\r\n                    <span className=\"badge bg-primary rounded-pill\">\r\n                      {value.length}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cadena;\r\n","export const types = {\r\n    vocabularioAdd:'[vocabulario] add',\r\n    vocabularioActive:'[vocabulario] active',\r\n    vocabularioAddCadena: '[vocabulario] add cadena',\r\n    vocabularioDelete: '[vocabulario] delete',\r\n    \r\n\r\n    counterAdd:'[counter] add',\r\n}","import {useState} from 'react'\r\n\r\nconst UseCounter = (initialState=0) => {\r\n\r\n    const [counter, setCounter] = useState(initialState);\r\n\r\n    const reset = (initial=initialState) => {\r\n        setCounter(initial);\r\n    }\r\n\r\n    const increment = (max=20) => {\r\n        if (counter < max) {\r\n            setCounter(counter + 1);            \r\n        }\r\n    }\r\n\r\n    const decrement = (min=0) => {\r\n        if (counter >min) {\r\n            setCounter(counter - 1);            \r\n        }\r\n    }\r\n\r\n    return{counter,increment,decrement,reset}\r\n}\r\n\r\nexport default UseCounter","import React, { useEffect,  } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startAddCount } from '../actions/counter';\r\nimport UseCounter from '../hooks/useCounter'\r\n\r\nconst Counter = () => {\r\n\r\n\r\n    const { counter, increment, decrement, reset } = UseCounter(10);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        dispatch(startAddCount(counter));\r\n    }, [counter,dispatch])\r\n    \r\n    return (\r\n       <div className='my-2 text-center my-1'>\r\n            <h3>cantidad de cadenas</h3>\r\n            <button\r\n                onClick={()=>decrement(0)}\r\n                className='btn btn-primary'\r\n                disabled={\r\n                    (counter===1)? true:false\r\n                }\r\n            >\r\n                menos\r\n            </button>\r\n\r\n            <button onClick={()=>reset()} className='btn btn-primary mx-1'>reset</button>\r\n            \r\n            <button\r\n                onClick={()=>increment(20)}\r\n                className='btn btn-primary'\r\n                disabled={\r\n                    (counter===20)?true:false\r\n                }\r\n            >\r\n                más\r\n            </button>\r\n            <br  />\r\n            <strong className='fs-1 '>{counter}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import { types } from \"../types/types\"\r\n\r\nexport const startAddCount = (cantidad) => ({\r\n    type: types.counterAdd,\r\n    payload:{cantidad}        \r\n})","import {useState} from 'react'\r\n\r\nconst useForm = (initialState={}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newwState = initialState) => {\r\n        setValues(newwState);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    \r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n\r\nexport default useForm","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startVocabularioAddCadena } from '../actions/vocabulario'\r\nimport useForm from '../hooks/useForm'\r\n\r\nconst FormAddCadena = () => {\r\n    const [values, handleInputChange] = useForm({ cadena: '' })\r\n    const dispatch = useDispatch();\r\n\r\n    const vocabulario = useSelector(state => state.vocabulario)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!(vocabulario.vocabularios[vocabulario.active.index]).includes(values.cadena)) {\r\n            dispatch(startVocabularioAddCadena(vocabulario.active.index, values.cadena));\r\n            // reset();            \r\n        }\r\n\r\n        document.getElementById('cadena').select();\r\n\r\n    }\r\n    \r\n    return (\r\n         <form className=\" g-3  text-center p-5 \" onSubmit={handleSubmit}>\r\n    \r\n                <h4>Ingresar símbolos</h4>\r\n                <div className=\"row\">\r\n                    <label className=\" col-sm-12 col-lg-3 col-form-label text-white\">Símbolo</label>\r\n                    <div className=\" col-sm-12 col-lg-6\">\r\n                    <input type=\"text\" className=\"form-control bg-transparent text-white\" name='cadena' id='cadena' onChange={handleInputChange} value={values.cadena} autoComplete='off'/>\r\n                    </div>\r\n                    <div className=' col-sm-12 col-lg-3'>\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-primary my-1'\r\n                        >\r\n                            agregar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormAddCadena\r\n","import { types } from \"../types/types\";\r\n\r\nexport const startAddVocabulario = () => (\r\n    {\r\n        type: types.vocabularioAdd,\r\n        payload: []\r\n    }\r\n);\r\n\r\n\r\nexport const startActiveVocabulario = (index, vocabulario) => (\r\n    {\r\n        type: types.vocabularioActive,\r\n        payload: {\r\n            index,\r\n            vocabulario,\r\n            size:vocabulario.length\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const startVocabularioAddCadena = (index, cadena) => (\r\n    {\r\n        type: types.vocabularioAddCadena,\r\n        payload: {\r\n            index,cadena\r\n        }\r\n    }\r\n)\r\n\r\nexport const startVocabularioDelete = (index) => (\r\n    {\r\n        type: types.vocabularioDelete,\r\n        payload:{index}\r\n    }\r\n)","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst NavBar = () => {\r\n\r\n    const index = useSelector(state => state.vocabulario.active.index);\r\n    return (\r\n        <ul className=\"nav justify-content-between  shadow  mb-4 ms-3 p-3\">\r\n            <div></div>\r\n            <h3 className='text-white'>vocabulario { index+1}</h3>\r\n           <div className='d-flex'>\r\n                {/* <li className=\"nav-item\">\r\n                    <button className=\"btn btn-primary mx-1\">Active</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button className=\"btn btn-success mx-1\">Active</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button className=\"btn btn-danger mx-1\">Active</button>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button className=\"btn btn-warning mx-1\">Active</button>\r\n                </li> */}\r\n           </div>\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport Cadena from './Cadena'\r\nimport Counter from './Counter'\r\nimport FormAddCadena from './FormAddCadena'\r\nimport NavBar from './NavBar'\r\n\r\nconst Panel = () => {\r\n\r\n    \r\n    return (\r\n        <div className=\"d-flex flex-column flex-shrink-0  col-md-8 col-12 p-0 m-0\"  >\r\n            <NavBar />\r\n           <div className='ms-3 p-2'>\r\n               <div className='shadow animate__animated animate__animated animate__zoomIn'>\r\n                    \r\n                   <div className='d-flex flex-column justify-content-center align-item-center'>\r\n                        \r\n                        <FormAddCadena/>\r\n                      \r\n                   </div>\r\n               </div>\r\n              \r\n                <div className='shadow p-1 animate__animated animate__zoomIn pt-3'>\r\n                    <Counter />\r\n                    <Cadena/>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel\r\n","import React from 'react'\r\n\r\nconst PanelBlank = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column flex-shrink-0 justify-content-center align-items-center col-md-8 col-12 fill-content m-0 p-0\"  >\r\n          \r\n                <div className=\"alert alert-primary text-center\" role=\"alert\">\r\n                    <h3>No has seleccionado ningún vocabulario!!</h3>\r\n                    si aún no tienes ningún vocabulario presiona en <strong> agregar nuevo vocabulario </strong>\r\n                </div>\r\n      \r\n          <img src='https://estudiaperu.pe/wp-content/uploads/2019/12/UNASAM.png' alt=\"no se pudo cargar\" style={{maxHeight:'300px',opacity:'0.5'}} className='img-fluid' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PanelBlank\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startActiveVocabulario, startVocabularioDelete } from '../actions/vocabulario';\r\nimport { arrayToString } from '../helpers/functions';\r\n\r\nconst Vocabularios = ({ index,vocabulario }) => {\r\n    \r\n    const active = useSelector(state => state.vocabulario.active)\r\n    const dispatch = useDispatch();\r\n    const handleClick = () => {\r\n        dispatch(startActiveVocabulario(index,vocabulario))\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startVocabularioDelete(index))\r\n    }\r\n    return (\r\n        <div className='ms-2'>\r\n            <div className={`alert shadow-lg alert-dismissible fade show hover m-3 p-0 ${(index===active.index)?('active'):''} animate__animated animate__backInLeft`} role=\"alert\"  >\r\n                <div className='m-2 pointer' style={{height:'100%'}} onClick={handleClick}>\r\n                    <h6>vocabulario : {index+1}</h6>\r\n                   \r\n                    <p><strong>V{ index+1 }={arrayToString(vocabulario)}</strong></p>\r\n                </div>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\" onClick={handleDelete}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Vocabularios\r\n","import React from 'react'\r\nimport Vocabularios from './Vocabularios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startAddVocabulario } from '../actions/vocabulario';\r\n\r\nconst SideBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const vocabularios = useSelector(state => state.vocabulario.vocabularios);\r\n   \r\n    const handleClick = () => {\r\n        if (vocabularios.length <= 5) {\r\n            dispatch(startAddVocabulario());            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar d-flex flex-column flex-shrink-0 p-3 text-white  col-md-4 col-12 fill-content\" style={{  height: '100vh' }}>\r\n            <div className='text-center'>\r\n                <img src='https://estudiaperu.pe/wp-content/uploads/2019/12/UNASAM.png' alt=\"no se pudo cargar\" style={{maxHeight:'150px'}} className='img-fluid' />\r\n            </div>\r\n            <hr />\r\n            \r\n                <button\r\n                    className='btn btn-primary btn-lg'\r\n                    onClick={handleClick}\r\n                    disabled={(vocabularios.length===5)?true:false}\r\n                >\r\n               \r\n                \r\n                    {\r\n                    (vocabularios.length === 5)\r\n                            ?(\r\n                                <strong className='text-center text-warning'>La cantidad máxima de vocabularios es 5</strong>\r\n                            )\r\n                            : (\r\n                                <strong>Agregar nuevo vocabulario</strong>\r\n                            )\r\n                    \r\n                    }\r\n                </button>\r\n            \r\n         \r\n            <br />\r\n\r\n            <div className='overflow-auto'>\r\n                {\r\n                    vocabularios.map((value,index) => (\r\n                        <Vocabularios key={index} index={index} vocabulario={value}/>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n            \r\n          \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","\nimport {  useSelector } from 'react-redux';\nimport './App.css';\nimport Panel from './components/Panel';\nimport PanelBlank from './components/PanelBlank';\nimport SideBar from './components/SideBar';\n\n\nfunction App() {\n  \n  const active = useSelector(state => state.vocabulario.active);\n  \n  return (\n    <div className='row contenedor'>\n      <SideBar />\n      \n      {\n        (active.length!==0)\n        ?(  <Panel />)\n        :(<PanelBlank/>)   \n      }\n     \n    </div>\n  );\n}\n\nexport default App;\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    vocabularios: [],\r\n    active:[]\r\n}\r\n\r\nconst vocabularioReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.vocabularioAdd:\r\n            return {\r\n                ...state,\r\n                vocabularios: [...state.vocabularios, action.payload]\r\n            };\r\n        case types.vocabularioActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.vocabularioAddCadena:\r\n            return {\r\n                ...state,\r\n                vocabularios: state.vocabularios.map((value, index) => (index === action.payload.index ? [...value, action.payload.cadena] : value)),\r\n                active: {\r\n                    ...state.active,\r\n                    vocabulario: [...state.active.vocabulario, action.payload.cadena],\r\n                    size:state.active.vocabulario.length+1\r\n                }\r\n                \r\n            }\r\n            \r\n        case types.vocabularioDelete:\r\n            return {\r\n                ...state,\r\n                vocabularios: state.vocabularios.filter((value, index) => (index !== action.payload.index) ),\r\n                active:[]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default vocabularioReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport vocabularioReducer from \"../reducers/vocabularioReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { countReducer } from \"../reducers/countReducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    vocabulario: vocabularioReducer,\r\n    count:countReducer\r\n    \r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n   composeEnhancers(applyMiddleware(thunk))\r\n)","import { types } from \"../types/types\";\r\n\r\n\r\nexport const countReducer = (state = { cantidad: 0 }, action) => {\r\n    switch (action.type) {\r\n        case types.counterAdd:\r\n            return {\r\n                ...state,\r\n                cantidad:action.payload.cantidad\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}